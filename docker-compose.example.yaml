version: "3"

services:
  # <media_service> is used to serve your media to the client devices
  <media_service>:
    image: lscr.io/linuxserver/<media_service>
    container_name: <media_service>
    #network_mode: host # plex
    environment:
      - PUID=<your_PUID>
      - PGID=<your_PGID>
      - VERSION=docker
    volumes:
      - <media_folder>/movies:/data/movies
      - <media_folder>/tvshows:/data/tvshows
      - <install_location>/config/<media_service>:/config
    ports:
      - 8096:8096
    restart: unless-stopped

  # qBitorrent is used to download torrents
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent
    container_name: qbittorrent
    environment:
      - PUID=<your_PUID>
      - PGID=<your_PGID>
      - WEB_UI_PORT=8080
    volumes:
      - <media_folder>/downloads:/downloads
      - <install_location>/config/qbittorrent:/config
    restart: unless-stopped
    ports: # qbittorrent
      - 8080:8080 # qbittorrent
    #network_mode: "service:gluetun"

  # Sonarr is used to query, add downloads to the download queue and index TV shows
  # https://sonarr.tv/
  sonarr:
    image: lscr.io/linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=<your_PUID>
      - PGID=<your_PGID>
    volumes:
      - <media_folder>/tvshows:/tv
      - <media_folder>/downloads:/downloads
      - <install_location>/config/sonarr:/config
    ports:
      - 8989:8989
    restart: unless-stopped

  # Radarr is used to query, add downloads to the download queue and index Movies
  # https://radarr.video/
  radarr:
    image: lscr.io/linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=<your_PUID>
      - PGID=<your_PGID>
    volumes:
      - <media_folder>/movies:/movies
      - <media_folder>/downloads:/downloads
      - <install_location>/config/radarr:/config
    ports:
      - 7878:7878
    restart: unless-stopped

  # Lidarr is used to query, add downloads to the download queue and index Music
  # https://lidarr.audio/
  lidarr:
    image: lscr.io/linuxserver/lidarr
    container_name: lidarr
    environment:
      - PUID=<your_PUID>
      - PGID=<your_PGID>
    volumes:
      - <media_folder>/music:/music
      - <media_folder>/downloads:/downloads
      - <install_location>/config/lidarr:/config
    ports:
      - 8686:8686
    restart: unless-stopped

  # Readarr is used to query, add downloads to the download queue and index Audio and Ebooks
  # https://readarr.com/
  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PUID=<your_PUID>
      - PGID=<your_PGID>
    volumes:
      - <media_folder>/books:/books
      - <media_folder>/downloads:/downloads
      - <install_location>/config/readarr:/config
    ports:
      - 8787:8787
    restart: unless-stopped

  # Bazarr is used to download and categorize subtitles
  # https://www.bazarr.media/
  bazarr:
    image: lscr.io/linuxserver/bazarr
    container_name: bazarr
    environment:
      - PUID=<your_PUID>
      - PGID=<your_PGID>
    volumes:
      - <media_folder>/movies:/movies
      - <media_folder>/tvshows:/tv
      - <install_location>/config/bazarr:/config
    ports:
      - 6767:6767
    restart: unless-stopped

  # Prowlarr is our torrent indexer/searcher. Sonarr/Radarr use Prowlarr as a source
  # https://prowlarr.com/
  prowlarr:
    image: lscr.io/linuxserver/prowlarr
    container_name: prowlarr
    environment:
      - PUID=<your_PUID>
      - PGID=<your_PGID>
    volumes:
      - <install_location>/config/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped

  # Gluetun is our VPN, so you can download torrents safely
  gluetun:
    image: qmcgaw/gluetun:v3.34.1
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 8888:8888/tcp # HTTP proxy
      - 8388:8388/tcp # Shadowsocks
      - 8388:8388/udp # Shadowsocks
      #- 8080:8080/tcp # gluetun
    volumes:
      - <install_location>/config/gluetun:/config
    environment:
      - VPN_SERVICE_PROVIDER=<vpn_service>
      - VPN_TYPE=openvpn
      - OPENVPN_USER=<vpn_user>
      - OPENVPN_PASSWORD=<vpn_password>
      - SERVER_COUNTRIES=<vpn_country>
      - OPENVPN_CIPHERS=AES-256-GCM
    restart: unless-stopped

  # Portainer helps debugging and monitors the containers
  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    ports:
      - 9000:9000
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - <install_location>/config/portainer:/data
    restart: unless-stopped

  # Watchtower is going to keep our instances updated
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    environment:
      - WATCHTOWER_CLEANUP=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  # Jellyseerr handles requests for new content
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=America/Kentucky/Louisville
    ports:
      - 5055:5055
    volumes:
      - <install_location>/config/jellyseerr:/app/config
    restart: unless-stopped
